{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/ec2-ios-monitoring","result":{"data":{"markdownRemark":{"id":"c1493f47-0742-5a77-9afd-ce51953b0e79","html":"<p>I had setup a couple of EC2 instances to execute OQ engine runs. Unfortunately, I could not automate the setup and teardown of each run since each run had its own specific post-processing of data that needed to be done. One gigantic worry I had was that I’d complete all my work on the instance and then just forget to stop it, incurring unnused hours of runtime on a (potentially) expensive instance. For example, if I had forgotten to turn off a x1.32xlarge instance and just let it run overnight, it would’ve cost 8hrs * $USD 13 = $USD 104! A very expensive mistake. </p>\n<p>I wanted a simple reminder pushed to my phone (being high in the order of things that catch and redirect my attention) about whether I had any EC2 instances currently running when they’re not supposed to and be promptly shut down. To do this, I set a cron job that called a script every half hour to my AWS account and checked for running EC2 instances. If there were, a notification is sent to my iPhone.  </p>\n<p>The following steps assume that you already have an AWS account with EC2 instances running, as well as adequare knowledge of setupin your local python environment.</p>\n<h2 id=\"preparing-your-environment\" style=\"position:relative;\"><a href=\"#preparing-your-environment\" aria-label=\"preparing your environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preparing your environment</h2>\n<ol>\n<li>Download and install the AWS CLI: <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Installing, updating, and uninstalling the AWS CLI version 2</a> </li>\n<li>Install Python 3.6 or later, and then install the Boto3 library: <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Installing the Boto3 library</a>. This library is an official AWS SDK to interact with AWS services via python. </li>\n<li>[Install the requests library for python] (<a href=\"https://docs.python-requests.org/en/master/user/install/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.python-requests.org/en/master/user/install/</a>) </li>\n<li><a href=\"https://www.pushcut.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Install PushCut into your iOS device</a>. We will use this to call webhooks that send push notifications to the iOS device that you’ve installed it on. </li>\n</ol>\n<h2 id=\"monitoring-script\" style=\"position:relative;\"><a href=\"#monitoring-script\" aria-label=\"monitoring script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Monitoring script</h2>\n<p>This is the python script that I’ve used:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> boto3 \n<span class=\"token keyword\">import</span> requests <span class=\"token keyword\">as</span> rq\n\nec2 <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>resource<span class=\"token punctuation\">(</span><span class=\"token string\">'ec2'</span><span class=\"token punctuation\">)</span> \ninstances <span class=\"token operator\">=</span> ec2<span class=\"token punctuation\">.</span>instances<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>\n    Filters<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'instance-state-name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Values'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'running'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>instances<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> \n\t<span class=\"token comment\"># there are instances running </span>\n\trq<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.pushcut.io/&lt;your secret token goes here>/notifications/&lt;your custom notification name goes here>\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The script simply enumerates through the ec2 resources and checks if there are any that are currently running. If there are any running instances, it sends a GET request to the PushCut url as defined in your app. See the <a href=\"https://www.pushcut.io/help#web_api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Webhook</a> section in the PushCut help section to get started on defining custom webhooks. </p>\n<p>Save this script somewhere and remember the path to it. </p>\n<h2 id=\"setting-up-the-cron-jobtask-scheduler\" style=\"position:relative;\"><a href=\"#setting-up-the-cron-jobtask-scheduler\" aria-label=\"setting up the cron jobtask scheduler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up the cron job/task scheduler</h2>\n<p>For Linux/MacOS, type the following command into your terminal to set up a cron job: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">0,30</span> * * * * <span class=\"token operator\">&lt;</span>path to your python program here<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>path to your script here<span class=\"token operator\">></span>.py </code></pre></div>\n<p>This calls the script every 0th and 30th minute of every hour.</p>\n<p>For Windows, follow the instructions <a href=\"https://www.windowscentral.com/how-create-automated-task-using-task-scheduler-windows-10\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. </p>","fields":{"slug":"/posts/ec2-ios-monitoring","tagSlugs":["/tag/ec-2/","/tag/i-os/"]},"frontmatter":{"date":"2021-05-11T20:35:56.693Z","description":"Perform simple AWS EC2 monitoring with notifications to iOS devices","tags":["EC2","iOS"],"title":"EC2 monitoring with iOS notifications","socialImage":null}}},"pageContext":{"slug":"/posts/ec2-ios-monitoring"}},"staticQueryHashes":["251939775","401334301","825871152"]}